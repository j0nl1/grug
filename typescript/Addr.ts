// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.

/**
 * An account address.
 *
 * In Grug, addresses are of 20-byte length, in Hex encoding and the `0x` prefix.
 * In comparison, in the "vanilla" CosmWasm, addresses are either 20- or 32-byte,
 * in Bech32 encoding. The last 6 ASCII characters are the checksum.
 *
 * In CosmWasm, when addresses are deserialized from JSON, no validation is
 * performed. An attacker can put a string that is not a valid address in a
 * message, and this would be deserialized into an `cosmwasm_std::Addr` without
 * error. Therefore, in CosmWasm, it is recommended to deserialize addresses
 * into `String`s first, then call `deps.api.addr_validate` to validate them.
 * This can be sometimes very cumbersome. It may be necessary to define two
 * versions of the same type, one "unchecked" version with `String`s, one
 * "checked" version with `Addr`s.
 *
 * In Grug, addresses are validated during deserialization. If deserialization
 * doesn't throw an error, you can be sure the address is valid. Therefore it
 * is safe to use `Addr`s in JSON messages.
 */
export type Addr = string;
